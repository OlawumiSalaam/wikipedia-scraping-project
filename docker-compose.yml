#This docker-compose.yml file sets up a multi-database environment using Docker. 
#It includes services for MySQL, PostgreSQL, and SQL Server, allowing you to manage multiple database systems simultaneously. 
#Each service is configured with specific environment variables, volumes, and ports to ensure seamless operation.
# Use root/example as user/password credentials
version: '3.8'

services:
  mysqldb:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "amdaripassword"
      MYSQL_DATABASE: "amdaridb"
      MYSQL_USER: "amdariuser"
      MYSQL_PASSWORD: "amdariuserpassword"
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"

  postgresdb:
    image: postgres:latest
    restart: always
    shm_size: '128mb'
    environment:
      POSTGRES_PASSWORD: "amdariuserpassword"
      POSTGRES_USER: "amdariuser"
      POSTGRES_DB: "amdaridb"
      MSSQL_DB: "amdaridb"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  sqlserverdb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserverdb
    environment:
      SA_PASSWORD: "amdaripassword_01"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserverdb-data:/var/opt/mssql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro


volumes:
  mysql-data: {}
  postgres-data: {}
  sqlserverdb-data: {}
